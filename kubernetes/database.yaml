apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: database-statefulset
  name: database-statefulset
spec:
  serviceName: database-headless
  replicas: 2
  selector:
    matchLabels:
      app: database-statefulset
  template:
    metadata:
      labels:
        app: database-statefulset
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        ports:
        - containerPort: 3306
        envFrom:
        - secretRef:
            name: database-secret
        volumeMounts:
          - name: mysql-data
            mountPath: /var/lib/mysql
          - name: mysql-init
            mountPath: /docker-entrypoint-initdb.d
            readOnly: true
          - name: mysql-init-repl
            mountPath: /docker-entrypoint-initdb.d/replication
          - name: config
            mountPath: /etc/mysql/conf.d
        command: ["/bin/bash", "-c"]
        args:
          - |
            if [[ "$(hostname)" == *-0 ]]; then
              cp /etc/mysql/conf.d/master.cnf /etc/mysql/conf.d/server.cnf
            else
              cp /etc/mysql/conf.d/slave.cnf /etc/mysql/conf.d/server.cnf
            fi
            exec docker-entrypoint.sh mysqld
      volumes:
      - name: mysql-init
        configMap:
          name: mysql-init-1
      - name: mysql-init-repl
        configMap:
          name: mysql-init-2
          items:
            - key: init-replication.sh
              path: init-replication.sh
      - name: config
        configMap:
          name: mysql-init-2
          items:
          - key: master.cnf
            path: master.cnf
          - key: slave.cnf
            path: slave.cnf
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ebs-sc
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: database-headless
spec:
  selector:
    app: database-statefulset
  clusterIP: None
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-1
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS todo_app;
    USE todo_app;

    CREATE TABLE IF NOT EXISTS todos (
      id INT AUTO_INCREMENT PRIMARY KEY,
      title VARCHAR(255) NOT NULL,
      description TEXT,
      done BOOLEAN DEFAULT FALSE,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS audit (
      id INT AUTO_INCREMENT PRIMARY KEY,
      event_type VARCHAR(100),
      payload JSON,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-2
data:
  master.cnf: |
    [mysqld]
    log-bin=mysql-bin
    server-id=1

  slave.cnf: |
    [mysqld]
    relay-log=relay-bin
    server-id=2

  init-replication.sh: |
    #!/bin/bash
    set -ex
    if [[ "$(hostname)" == *-0 ]]; then
      echo "Running on master - skipping replication setup"
    else
      echo "Setting up replication on replica"
      mysql -h mysql-0.mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "
        CHANGE MASTER TO
          MASTER_HOST='mysql-0.mysql',
          MASTER_USER='repl',
          MASTER_PASSWORD='$MYSQL_REPL_PASSWORD',
          MASTER_AUTO_POSITION=1;
        START SLAVE;"
    fi